# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 40763e6f2f62e4724ca338795a26de4d9e64cd4d7faa30d9584cb1e103cc323e

    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6
      - image: mdillon/postgis:11-alpine


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4


    working_directory: ~/repo

    steps:
      - checkout



      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install codeclimate-test-reporter
            pip install coverage==4.3
            sudo apt-get update &&\
             sudo apt-get install -y binutils libproj-dev libgdal-dev gdal-bin gettext g++ gcc
            gdal-config --version
            pip install --global-option=build_ext --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version`
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io

      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
                     curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                     chmod +x ./cc-test-reporter

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py migrate
            mkdir test-reports
            ./cc-test-reporter before-build
            pytest --junitxml=test-reports/junit.xml
            coverage xml
            ./cc-test-reporter after-build --coverage-input-type coverage.py



      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports
          destination: test-reports
